{"version":3,"sources":["reducers/user.js","reducers/transaction.js","reducers/chosen.js","reducers/ticketSwitch.js","reducers/index.js","store/index.js","components/Form/index.js","components/Jumbotron/index.js","components/Container/index.js","components/Alert/index.js","actions/index.js","pages/Main/index.js","components/Table/index.js","components/EditForm/index.js","components/TicketList/index.js","components/TicketForm/index.js","components/UserInfo/index.js","components/UpdateUserInfo/index.js","pages/UserDetails/index.js","App.js","serviceWorker.js","index.js"],"names":["usersReducer","state","action","type","payload","sort","a","b","id","transactionReducer","chosenReducer","initialState","update","ticket","edit","switchReducer","allReducers","combineReducers","userReducer","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Form","props","children","Input","className","TextArea","Submit","color","Button","Jumbotron","title","text","Container","Row","Col","Alert","role","newUser","data","currentUser","chosen","addTransaction","updateSwitch","ticketSwitch","editSwitch","Main","user","useSelector","dispatch","useDispatch","history","useHistory","useState","username","setUsername","email","setEmail","showAlert","setShowAlert","Fragment","onSubmit","e","preventDefault","forEach","item","push","lastItem","slice","length","value","onChange","target","placeholder","Table","Thead","Th","scope","Tbody","Tr","Td","EditForm","transId","transaction","chosenTransaction","filter","ticketId","ticketBoolean","date","subject","setSubject","description","setDescription","followUp","setFollowUp","showForm","setShowForm","dateToFormat","index","findIndex","splice","userId","format","TicketList","transactions","isDeleted","setisDeleted","chosenTransId","setChosenTransId","userTransactions","onDelete","tixId","setTimeout","map","i","key","onClick","TicketForm","Math","floor","random","Date","now","UserInfo","firstName","lastName","phone","location","chosenUser","UpdateUserInfo","setFirstName","setLastName","setPhone","setLocation","UserDetails","to","App","basename","process","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63fde501.chunk.js","sourcesContent":["\r\nconst usersReducer = (state = [], action) => {\r\n\r\n    switch(action.type){\r\n        case \"NEW_USER\":\r\n            return state = [...state, action.payload].sort((a, b) => (a.id > b.id) ? 1 : -1);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default usersReducer;\r\n","const transactionReducer = (state = [], action) => {\r\n\r\n    switch(action.type){\r\n        case \"ADD_TRANSACTION\":\r\n            return state = [...state, action.payload];\r\n        case \"DELETE_TRANSACTION\":\r\n            return state = action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default transactionReducer;\r\n\r\n","\r\nconst chosenReducer = (state = {} , action) => {\r\n\r\n    switch(action.type){\r\n        case \"CURRENT_USER\":\r\n            return state = action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenReducer;","\r\nconst initialState = {\r\n    update: false,\r\n    ticket: false,\r\n    edit: false\r\n    };\r\n\r\nconst switchReducer = (state = initialState, action) => {\r\n    \r\n        if (action.type === \"TICKET_SWITCH\"){\r\n            return state = { ...state, ticket: action.payload}\r\n        } else if (action.type === \"UPDATE_SWITCH\"){\r\n            return state = { ...state, update: action.payload}\r\n        } else if (action.type === \"EDIT_SWITCH\"){\r\n            return state = { ...state, edit: action.payload}\r\n        } else {\r\n            return state\r\n        }\r\n\r\n}\r\n\r\nexport default switchReducer;","import userReducer from \"./user\";\r\nimport transactionReducer from \"./transaction\";\r\nimport chosenReducer from \"./chosen\"\r\nimport switchReducer from \"./ticketSwitch\"\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    userReducer,\r\n    transactionReducer,\r\n    chosenReducer,\r\n    switchReducer\r\n});\r\n\r\nexport default allReducers;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport allReducers from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n\r\n\r\nconst store = createStore(allReducers, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import React from \"react\";\r\n\r\n\r\nexport function Form(props) {\r\n        \r\n    return (\r\n            <form {...props}>{props.children}</form>\r\n        )\r\n}\r\n\r\nexport function Input(props) {\r\n        \r\n    return (\r\n            <input className=\"form-control\" {...props}/>\r\n        )\r\n}\r\nexport function TextArea(props) {\r\n        \r\n    return (\r\n            <textarea className=\"form-control\" {...props}></textarea>\r\n        )\r\n}\r\nexport function Submit(props) {\r\n\r\n        return (\r\n            <button type=\"submit\" className={`btn mt-2 mb-2 btn-${props.color}`}>{props.children}</button>\r\n        )\r\n}\r\nexport function Button(props) {\r\n\r\n        return (\r\n            <button {...props} className={`btn mt-3 mb-2 btn-${props.color}`}>{props.children}</button>\r\n        )\r\n}","import React from \"react\";\r\n\r\nfunction Jumbotron({title, text}) {\r\n\r\n\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">{title}</h1>\r\n                <p className=\"lead\">{text}</p>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\nexport function Container(props) {\r\n\r\n    return (\r\n        <div className=\"container\">{props.children}</div>\r\n    )\r\n}\r\nexport function Row(props) {\r\n\r\n    return (\r\n        <div className=\"row\">{props.children}</div>\r\n    )\r\n}\r\nexport function Col(props) {\r\n\r\n    return (\r\n        <div {...props}>{props.children}</div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n\r\n    return (\r\n        <div className=\"alert alert-success\" role=\"alert\">{props.children}</div>\r\n    )\r\n}\r\n\r\nexport  default Alert;","export const newUser = (data) => {\r\n    return {\r\n        type: \"NEW_USER\",\r\n        payload: data\r\n    }\r\n};\r\nexport const currentUser = (chosen) => {\r\n\r\n    return {\r\n        type: \"CURRENT_USER\",\r\n        payload: chosen\r\n    }\r\n};\r\nexport const addTransaction = (data) => {\r\n    \r\n    return {\r\n        type: \"ADD_TRANSACTION\",\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const updateSwitch = (data) => {\r\n\r\n    return {\r\n        type: \"UPDATE_SWITCH\",\r\n        payload: data\r\n    }\r\n};\r\nexport const ticketSwitch = (data) => {\r\n\r\n    return {\r\n        type: \"TICKET_SWITCH\",\r\n        payload: data\r\n    }\r\n};\r\nexport const editSwitch = (data) => {\r\n\r\n    return {\r\n        type: \"EDIT_SWITCH\",\r\n        payload: data\r\n    }\r\n};\r\n\r\n// export const deleteTransactionAsync = (newArr) => {\r\n    \r\n//     return {\r\n//         type: \"DELETE_TRANSACTION\",\r\n//         payload: newArr\r\n//     }\r\n// };\r\n// using Thunk to delay the update of the state.\r\nexport const deleteTransaction = data => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: \"DELETE_TRANSACTION\",\r\n                payload: data\r\n            });\r\n        }, 2000)\r\n\r\n    }\r\n}","import React, { useState }from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Submit } from \"../../components/Form\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport { Container } from \"../../components/Container\";\r\nimport Alert from \"../../components/Alert\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { newUser, currentUser } from \"../../actions\";\r\n\r\n\r\n\r\n\r\nfunction Main () {\r\n\r\n        const user = useSelector(state => state.userReducer);\r\n        const dispatch = useDispatch();\r\n        const history = useHistory();\r\n\r\n        const [username, setUsername] = useState(\"\");\r\n        const [email, setEmail] = useState(\"\");\r\n        const [ showAlert, setShowAlert] = useState(false);\r\n\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (!username || !email){\r\n                // alert('Please Enter Username and Email')\r\n                setShowAlert(true);\r\n            } else {\r\n                let chosen;\r\n                user.forEach(item => {\r\n                if (item.username === username && item.email === email){\r\n                    chosen = item;\r\n                }\r\n                })\r\n                \r\n                if (chosen){\r\n                dispatch(currentUser(chosen))\r\n                history.push(\"/details\");\r\n\r\n                } else {\r\n                    let lastItem = user.slice(-1)[0]\r\n                    dispatch(newUser({\r\n                    id: user.length ? lastItem.id + 1 : 1,\r\n                    username: username,\r\n                    email: email\r\n                }))\r\n                \r\n                dispatch(currentUser({\r\n                    id: user.length ? lastItem.id + 1 : 1,\r\n                    username: username,\r\n                    email: email\r\n                }))\r\n                setShowAlert(false);\r\n                history.push(\"/details\");\r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Jumbotron\r\n            title= {\"User Registration\"}\r\n            text= {\"Please Enter Your Credentials\"} \r\n            />\r\n            <Container>\r\n                <Form\r\n                onSubmit={handleSubmit}\r\n                >\r\n                    Username:\r\n                    <Input \r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e)=>setUsername(e.target.value)}\r\n                    placeholder=\"Enter Username\"\r\n                    />\r\n                    Email:\r\n                    <Input \r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    placeholder=\"Enter email\"\r\n                    />\r\n                    <Submit\r\n                    color=\"primary\"\r\n                    >Submit</Submit>\r\n                </Form>\r\n                { showAlert ? <Alert>Please Enter Username and Email</Alert> : \"\" }\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\n\r\nfunction Table({ children }){\r\n\r\n    return (\r\n        <table className=\"table\">{ children }</table>\r\n    )\r\n}\r\nfunction Thead({ children }){\r\n\r\n    return (\r\n        <thead>{ children }</thead>\r\n    )\r\n}\r\nfunction Th({ children }){\r\n\r\n    return (\r\n        <th scope=\"col\">{ children }</th>\r\n    )\r\n}\r\nfunction Tbody({ children }){\r\n\r\n    return (\r\n        <tbody>{ children }</tbody>\r\n    )\r\n}\r\n\r\n\r\nfunction Tr({ children }){\r\n\r\n    return (\r\n        <tr>{ children }</tr>\r\n    )\r\n}\r\n\r\nfunction Td({ children }){\r\n    return (\r\n        <td className=\"td\">{ children }</td>\r\n    )\r\n}\r\n\r\nexport { Table, Thead, Th, Tbody, Tr, Td };","import React, { useState } from \"react\";\r\nimport Moment from 'react-moment';\r\nimport Alert from \"../../components/Alert\";\r\nimport { Form, Input, TextArea, Submit } from \"../Form\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addTransaction, editSwitch } from \"../../actions\";\r\n\r\n\r\nfunction EditForm({ transId }) {\r\n\r\n    const transaction = useSelector(state => state.transactionReducer);\r\n    const chosen = useSelector(state => state.chosenReducer);\r\n    const chosenTransaction = transaction.filter(item=> item.ticketId === transId);\r\n    const ticketBoolean = useSelector(state=>state.switchReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [ticketId] = useState(chosenTransaction[0].ticketId);\r\n    const [date] = useState(chosenTransaction[0].date);\r\n    const [subject, setSubject] = useState(chosenTransaction[0].subject);\r\n    const [description, setDescription] = useState(chosenTransaction[0].description);\r\n    const [followUp, setFollowUp] = useState(chosenTransaction[0].followUp);\r\n    const [showForm, setShowForm] = useState(true);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        if (!subject || !description){\r\n            setShowAlert(true);\r\n        } else {\r\n\r\n            let index = transaction.findIndex(item=>item.ticketId === chosenTransaction[0].ticketId)\r\n            transaction.splice(index, 1)\r\n\r\n            dispatch(addTransaction({\r\n                userId: chosen.id,\r\n                ticketId,\r\n                date,\r\n                subject,\r\n                description,\r\n                followUp\r\n            }))\r\n            setShowForm(!showForm)\r\n            }\r\n            dispatch(editSwitch(!ticketBoolean.edit))\r\n        }\r\n\r\n    const dateToFormat = date;\r\n    return (\r\n        <React.Fragment>\r\n            { showAlert ? <Alert>Please Enter Subject and Description</Alert> : \"\" }\r\n            {showForm ? \r\n            <Form\r\n            onSubmit={onSubmitForm}\r\n            >       \r\n            <h2>Edit Transaction</h2>\r\n                <p>TICKET ID: {ticketId}</p>\r\n                <p>Date: <Moment format=\"MMMM Do YYYY, h:mm a\">{dateToFormat}</Moment></p>\r\n                <p>Subject:</p>\r\n                <Input \r\n                    type=\"text\"\r\n                    value={subject}\r\n                    onChange={(e)=>setSubject(e.target.value)}\r\n                    placeholder=\"Enter Subject\"\r\n                />\r\n                <p>Description:</p>\r\n                <TextArea \r\n                    type=\"textarea\"\r\n                    value={description}\r\n                    onChange={(e)=>setDescription(e.target.value)}\r\n                    placeholder=\"Enter Description\"\r\n                />\r\n                <p>Follow Up:</p>\r\n                <TextArea  \r\n                    type=\"textarea\"\r\n                    value={followUp}\r\n                    onChange={(e)=>setFollowUp(e.target.value)}\r\n                    placeholder=\"Enter Follow Up\"\r\n                />\r\n                <Submit color=\"success\">Submit</Submit>\r\n            </Form> : \"\"}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditForm;\r\n","import React, { useState } from \"react\";\r\nimport Moment from 'react-moment';\r\nimport { Table, Thead, Th, Tbody, Tr, Td } from \"../Table\";\r\nimport { Button } from \"../Form\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteTransaction, editSwitch } from \"../../actions\";\r\nimport EditForm from \"../EditForm\";\r\n\r\n\r\nfunction TicketList() {\r\n    \r\n    const transactions = useSelector(state => state.transactionReducer);\r\n    const chosen = useSelector(state => state.chosenReducer);\r\n    const ticketBoolean = useSelector(state=>state.switchReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isDeleted, setisDeleted] = useState(false);\r\n    const [chosenTransId, setChosenTransId ] = useState(\"\");\r\n    const userTransactions = transactions.filter(item => item.userId === chosen.id);\r\n\r\n    const onDelete = (tixId) => {\r\n     \r\n        let index = transactions.findIndex(item=>item.ticketId === tixId)\r\n        transactions.splice(index, 1)\r\n        dispatch(deleteTransaction(transactions))\r\n        setisDeleted(!isDeleted)\r\n    }\r\n\r\n    const onEdit = (id) => {\r\n        setChosenTransId(id)\r\n        dispatch(editSwitch(!ticketBoolean.edit));\r\n    }\r\n\r\n    return (\r\n        \r\n        <>\r\n            {ticketBoolean.edit ? <EditForm transId={chosenTransId}/> : \"\"}\r\n            <Table>\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>ID</Th>\r\n                        <Th>Date</Th>\r\n                        <Th>Subject</Th>\r\n                        <Th></Th>\r\n                        <Th></Th>\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                    {userTransactions.map((transaction, i) =>{\r\n                        const dateToFormat = transaction.date;\r\n                    return(\r\n                        <Tr key={i}>\r\n                            <Td>{transaction.ticketId}</Td>\r\n                            <Td><Moment format=\"MMMM Do YYYY\">{dateToFormat}</Moment></Td>\r\n                            <Td>{transaction.subject}</Td>\r\n                            <Td><Button onClick={() => onEdit(transaction.ticketId)} color=\"success\">Edit</Button></Td>\r\n                            <Td><Button onClick={() => onDelete(transaction.ticketId)}color=\"danger\">Delete</Button></Td>\r\n                            \r\n                        </Tr>\r\n                    )\r\n                })}\r\n                </Tbody>\r\n            </Table>\r\n            \r\n            </>\r\n    )\r\n}\r\n\r\nexport default TicketList;\r\n","import React, { useState } from \"react\";\r\nimport Moment from 'react-moment';\r\nimport Alert from \"../../components/Alert\";\r\nimport { Form, Input, TextArea, Submit } from \"../Form\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addTransaction, ticketSwitch } from \"../../actions\";\r\n\r\n\r\nfunction TicketForm() {\r\n\r\n    const chosen = useSelector(state => state.chosenReducer);\r\n    const ticketBoolean = useSelector(state=>state.switchReducer)\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ticketId] = useState(`${chosen.username}-000${Math.floor(Math.random()*1000 + 1)}`);\r\n    const [date] = useState(Date.now());\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [followUp, setFollowUp] = useState(\"\");\r\n    const [showForm, setShowForm] = useState(ticketBoolean.ticket);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        if (!subject || !description){\r\n            setShowAlert(true);\r\n        } else {\r\n            dispatch(addTransaction({\r\n                userId: chosen.id,\r\n                ticketId,\r\n                date,\r\n                subject,\r\n                description,\r\n                followUp\r\n            }))\r\n            setShowForm(!showForm)\r\n            dispatch(ticketSwitch(!ticketBoolean.ticket))\r\n        }\r\n    }\r\n\r\n    const dateToFormat = date;\r\n    return (\r\n        <React.Fragment>\r\n            { showAlert ? <Alert>Please Enter Subject and Description</Alert> : \"\" }\r\n            {showForm ? \r\n            <Form\r\n            onSubmit={onSubmitForm}\r\n            >       \r\n                <p>TICKET ID: {ticketId}</p>\r\n                <p>Date: <Moment format=\"MMMM Do YYYY, h:mm a\">{dateToFormat}</Moment></p>\r\n                <p>Subject:</p>\r\n                <Input \r\n                    type=\"text\"\r\n                    value={subject}\r\n                    onChange={(e)=>setSubject(e.target.value)}\r\n                    placeholder=\"Enter Subject\"\r\n                />\r\n                <p>Description:</p>\r\n                <TextArea \r\n                    type=\"textarea\"\r\n                    value={description}\r\n                    onChange={(e)=>setDescription(e.target.value)}\r\n                    placeholder=\"Enter Description\"\r\n                />\r\n                <p>Follow Up:</p>\r\n                <TextArea  \r\n                    type=\"textarea\"\r\n                    value={followUp}\r\n                    onChange={(e)=>setFollowUp(e.target.value)}\r\n                    placeholder=\"Enter Follow Up\"\r\n                />\r\n                <Submit color=\"success\">Submit</Submit>\r\n            </Form> : \"\"}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TicketForm;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Submit } from \"../../components/Form\";\r\nimport { Row, Col } from \"../../components/Container\";\r\nimport { updateSwitch } from \"../../actions\"\r\n\r\n\r\n\r\nfunction UserInfo() {\r\n\r\n    const chosen = useSelector(state => state.chosenReducer);\r\n    const ticketBoolean = useSelector(state=>state.switchReducer)\r\n    const dispatch = useDispatch();\r\n\r\n    const [firstName] = useState(chosen.firstName ? chosen.firstName : \"\");\r\n    const [lastName] = useState(chosen.lastName ? chosen.lastName : \"\");\r\n    const [phone] = useState(chosen.phone ? chosen.phone : \"\");\r\n    const [location] = useState(chosen.location ? chosen.location : \"\");\r\n    const [chosenUser] = useState(chosen)\r\n\r\n \r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateSwitch(!ticketBoolean.update))\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n          <Row>\r\n                <Col className=\"col-6\">\r\n                    <Form\r\n                    onSubmit={onFormSubmit}>\r\n                        <p><strong>Username:</strong> {chosenUser.username}</p>\r\n                        <p><strong>email:</strong> {chosenUser.email}</p>\r\n                        <p><strong>First Name:</strong> {firstName ? firstName : chosenUser.firstName}</p>\r\n                        <p><strong>Last Name:</strong> {lastName ? lastName : chosenUser.lastName}</p>\r\n                        <p><strong>Phone Number:</strong> {phone ? phone : chosenUser.phone}</p>\r\n                        <p><strong>Location:</strong> {location ? location : chosenUser.location}</p>\r\n                        <Submit \r\n                        color=\"success\">Update\r\n                        </Submit>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React, { useState } from \"react\";\r\nimport { Form, Input, Submit} from \"../../components/Form\";\r\nimport { Row, Col } from \"../../components/Container\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { newUser, updateSwitch, currentUser } from \"../../actions\";\r\n\r\n\r\nfunction UpdateUserInfo() {\r\n    const user = useSelector(state => state.userReducer);\r\n    const chosen = useSelector(state => state.chosenReducer);\r\n    const ticketBoolean = useSelector(state=>state.switchReducer)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [username, setUsername] = useState(chosen.username);\r\n    const [email, setEmail] = useState(chosen.email);\r\n    const [firstName, setFirstName] = useState(chosen.firstName ? chosen.firstName : \"\");\r\n    const [lastName, setLastName] = useState(chosen.lastName ? chosen.lastName : \"\");\r\n    const [phone, setPhone] = useState(chosen.phone ? chosen.phone : \"\");\r\n    const [location, setLocation] = useState(chosen.location ? chosen.location : \"\");\r\n\r\n    const onUpdateSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let index = user.findIndex(item=>item.id === chosen.id)\r\n        user.splice(index, 1)\r\n\r\n        dispatch(newUser({\r\n            id: chosen.id,\r\n            username,\r\n            email,\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            location\r\n        }))\r\n        dispatch(currentUser({\r\n            id: chosen.id,\r\n            username,\r\n            email,\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            location\r\n        }))\r\n\r\n        dispatch(updateSwitch(!ticketBoolean.update))\r\n    }\r\n    \r\n\r\n    return (\r\n        \r\n            <Row>\r\n                <Col \r\n                className=\"col-6\"\r\n                >\r\n                    <Form\r\n                    onSubmit={onUpdateSubmit}\r\n                    >   \r\n                        <p>Username:</p>\r\n                        <Input \r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={(e)=>setUsername(e.target.value)}\r\n                            placeholder=\"Enter Username\"\r\n                        />\r\n                        <p>email:</p>\r\n                        <Input \r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e)=>setEmail(e.target.value)}\r\n                            placeholder=\"Enter Email\"\r\n                        />\r\n                        <p>First Name:</p>\r\n                        <Input \r\n                            type=\"text\"\r\n                            value={firstName}\r\n                            onChange={(e)=>setFirstName(e.target.value)}\r\n                            placeholder=\"Enter First Name\"\r\n                        />\r\n                        <p>Last Name:</p>\r\n                        <Input \r\n                            type=\"text\"\r\n                            value={lastName}\r\n                            onChange={(e)=>setLastName(e.target.value)}\r\n                            placeholder=\"Enter Last name\"\r\n                        />\r\n                        <p>Phone Number:</p>\r\n                        <Input \r\n                            type=\"phone\"\r\n                            value={phone}\r\n                            onChange={(e)=>setPhone(e.target.value)}\r\n                            placeholder=\"Enter Phone Number ex. 4072223344\"\r\n                        />\r\n                        <p>Location:</p>\r\n                        <Input \r\n                            type=\"text\"\r\n                            value={location}\r\n                            onChange={(e)=>setLocation(e.target.value)}\r\n                            placeholder=\"Enter State\"\r\n                        />\r\n                        <Submit>Submit</Submit>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        \r\n\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateUserInfo;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport { Form, Submit, Button} from \"../../components/Form\";\r\nimport { Container, Row, Col } from \"../../components/Container\";\r\nimport { ticketSwitch } from \"../../actions\";\r\nimport TicketList from \"../../components/TicketList\"\r\nimport TicketForm from \"../../components/TicketForm\";\r\nimport UserInfo from \"../../components/UserInfo\";\r\nimport UpdateUserInfo from \"../../components/UpdateUserInfo\";\r\n\r\nfunction UserDetails () {\r\n\r\n    const chosen = useSelector(state => state.chosenReducer);\r\n    const ticketBoolean = useSelector(state=>state.switchReducer)\r\n    const dispatch = useDispatch();\r\n\r\n    const onTicketSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ticketSwitch(!ticketBoolean.ticket));\r\n      }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"col-6 text-center\">\r\n                        <Jumbotron\r\n                        title={\"Welcome \" + chosen.username} \r\n                        text=\"Please review and Update your user information\"\r\n                        />\r\n                    </Col>\r\n                    <Col \r\n                        className=\"col-6 text-center\"\r\n                        >\r\n                        <Jumbotron\r\n                        title={\"Your Tickets\"} \r\n                        text=\"View and Create Tickets\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                \r\n                <Col className=\"col-6\">\r\n                <Link to=\"/\"><Button color=\"danger\">Log Out</Button></Link>\r\n                    {ticketBoolean.update ? <UpdateUserInfo/> : <UserInfo/>}\r\n                </Col>\r\n                <Col className=\"col-6\">\r\n                    <Form onSubmit={onTicketSubmit}>\r\n                    {ticketBoolean.ticket ?\r\n                        <Submit \r\n                        color=\"primary\"\r\n                        >\r\n                        X\r\n                        </Submit> : \r\n                        <Submit \r\n                        color=\"warning\"\r\n                        >\r\n                        Create Ticket\r\n                        </Submit> }\r\n                    </Form>\r\n                    {ticketBoolean.ticket ? <TicketForm /> : \"\"}\r\n                    <TicketList />\r\n                </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UserDetails;","import React from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Main from \"./pages/Main\";\nimport UserDetails from \"./pages/UserDetails\";\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path = \"/\" component={Main}/>\n        <Route exact path = \"/details\" component={UserDetails}/>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}